- model_class = Graph

div class="tree"
  == tree @root, Settings.try(:tree).try(:depth)

table class="table table-striped"
  thead
    tr
      th= model_class.human_attribute_name(:id)
      th= model_class.human_attribute_name(:path)
      th= model_class.human_attribute_name(:created_at)
      th=t '.actions', :default => t("helpers.actions")
  tbody
    - @graphs.each do |graph|
      tr
        td= link_to graph.id, graph_path(graph)
        td= link_to graph.path, view_graph_path(graph.path)
        td=l graph.created_at
        td
          = link_to t('.edit', :default => t("helpers.links.edit")), edit_graph_path(graph), :class => 'btn btn-mini'
          '
          = link_to t('.destroy', :default => t("helpers.links.destroy")), graph_path(graph), :method => :delete, :data => { :confirm => t('.confirm', :default => t("helpers.links.confirm", :default => 'Are you sure?')) }, :class => 'btn btn-mini btn-danger'

= link_to t('.new', :default => t("helpers.links.new")), new_graph_path, :class => 'btn btn-primary'

- if @display_graphs
  = render partial: 'graph_filters' 
  - @graphs.each do |graph|
    // @ToDo query should be instance variable ?
    - query = params.slice(:t, :from, :to, :size, :width, :height)
    h3 #{link_to File.basename(graph.path), view_graph_path(graph.path, query)}
    p.muted = graph.description
    p
      a.label.success.space-right href='#' = 'Setting'
      span.label.space-right = 'Complex Graph'
      span.label.space-right = 'created_at' 
      span.muted.small.space-right = graph.created_at.localtime
      span.label.space-right = 'updated_at'
      span.muted.small = graph.updated_at.localtime
    p
      a href="#{view_graph_path(graph.path, query)}"
        img src="#{graph_image_uri_for(graph.path)}"
