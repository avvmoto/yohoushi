- model_class = Graph

div class="tree"
  == tree @root

table class="table table-striped"
  thead
    tr
      th= model_class.human_attribute_name(:id)
      th= model_class.human_attribute_name(:path)
      th= model_class.human_attribute_name(:created_at)
      th=t '.actions', :default => t("helpers.actions")
  tbody
    - @graphs.each do |graph|
      tr
        td= link_to graph.id, graph_path(graph)
        td= link_to graph.path, view_graph_path(graph.path)
        td=l graph.created_at
        td
          = link_to t('.edit', :default => t("helpers.links.edit")), edit_graph_path(graph), :class => 'btn btn-mini'
          '
          = link_to t('.destroy', :default => t("helpers.links.destroy")), graph_path(graph), :method => :delete, :data => { :confirm => t('.confirm', :default => t("helpers.links.confirm", :default => 'Are you sure?')) }, :class => 'btn btn-mini btn-danger'

= link_to t('.new', :default => t("helpers.links.new")), new_graph_path, :class => 'btn btn-primary'

- if @display_graphs
  div
    .pull-right
      ul.nav.nav-pills
        - Settings.list_graph_nav.each do |item|
          - if item[:active_default] && params[:nav].nil?
            li.active = link_to(item[:name], {:nav => item[:short_name]})
          - elsif item[:short_name] == params[:nav]
            li.active = link_to(item[:name], {:nav => item[:short_name]})
          - else
            li = link_to(item[:name], {:nav => item[:short_name]})
  - @graphs.each do |graph|
    h3 #{link_to File.basename(graph.path), view_graph_path(graph.path)}
    .row-fluid
      - @units.each do |unit|
        .span6
          a href="#{view_graph_path(graph.path)}"
            img src="#{$mfclient.get_graph_uri(graph.path, unit)}"
