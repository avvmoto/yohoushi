RAILS_ENV  ||= ENV['RAILS_ENV']  ||= 'development'
RAILS_ROOT ||= ENV['RAILS_ROOT'] ||= File.expand_path('../..', __FILE__)
require File.expand_path("#{RAILS_ROOT}/lib/yohoushi/logger")

worker_processes 4
timeout 6000
listen "0.0.0.0:4804"
pid File.expand_path('../../log/unicorn.pid', __FILE__)
logger Yohoushi.logger(out: 'log/unicorn.log', shift_age: 10) # shift_age: 0 to stop logrotate
 
preload_app true
GC.respond_to?(:copy_on_write_friendly=) and GC.copy_on_write_friendly = true
 
before_fork do |server, worker|
  defined?(ActiveRecord::Base) and ActiveRecord::Base.connection.disconnect!
 
  old_pid = "#{server.config[:pid]}.oldbin"
  if old_pid != server.pid
    begin
      sig = (worker.nr + 1) >= server.worker_processes ? :QUIT : :TTOU
      Process.kill(sig, File.read(old_pid).to_i)
    rescue Errno::ENOENT, Errno::ESRCH
    end
  end

  sleep 1
end
 
after_fork do |server, worker|
  defined?(ActiveRecord::Base) and ActiveRecord::Base.establish_connection
end
